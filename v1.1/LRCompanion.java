import java.util.ArrayList;

public class LRCompanion {
  
  public static void main(String[] arg) throws Exception {
    //initiating variables
    int date, count, bestOf, numMatches;
    String title, time, tournament, format;
    Player p1, p2;
    ArrayList<Match> myAL = new ArrayList<Match>();
    
    //first we run the date dialog
    DateDialog myDateDialog = new DateDialog(null, false);
    myDateDialog.setVisible(true);
    
    //waiting for the user to submit
    while(myDateDialog.isVisible()){
      Thread.yield();
    }
    
    //now getting the data
    date = myDateDialog.getDateTextField();
    time = myDateDialog.getTimeTextField();
    myDateDialog.dispose();
    
    //now we run the info dialog
    InfoDialog myInfoDialog = new InfoDialog(null, false);
    myInfoDialog.setVisible(true);
    
    //waiting for the user to submit
    while(myInfoDialog.isVisible()){
      Thread.yield();
    }
    
    //now getting the data
    title = myInfoDialog.getTitleTextField();
    tournament = myInfoDialog.getTournamentTextField();
    if(myInfoDialog.getFormat())
      format = "DT";
    else
      format = "norm";
    
    myInfoDialog.dispose();
    
    //now we run the format dialog
    FormatDialog myFormatDialog = new FormatDialog(null, false);
    myFormatDialog.setVisible(true);
    
    //waiting for the user to submit
    while(myFormatDialog.isVisible()){
      Thread.yield();
    }
    
    //now getting the data
    bestOf = myFormatDialog.getBestOf();
    numMatches = myFormatDialog.getNumMatches();
    format = format + bestOf;
    myFormatDialog.dispose();
    
    //initializing a couple of variables
    MatchDialog myMatchDialog;
    boolean valid;
    String errormsg;
    
    //we need to do this once for every match that the user tells us
    for(int i = 0; i < numMatches; i++){
      myMatchDialog = new MatchDialog(null, false);
      myMatchDialog.setMatchNo(i + 1);
      myMatchDialog.setVisible(true);
      while(myMatchDialog.isVisible()){
        Thread.yield();
      }
      
      p1 = new Player(myMatchDialog.getPlayer1());
      p2 = new Player(myMatchDialog.getPlayer2());
      myMatchDialog.dispose();
      
      valid = false;
      
      //if its not valid then we need to try again
      while(!valid){
        if(p1.isValid() && p2.isValid())
          myMatchDialog.setError(false);
          valid = true;
        
        if(!valid){
          myMatchDialog = new MatchDialog(null, false);
          myMatchDialog.setError(true);
          myMatchDialog.setMatchNo(i + 1);
          myMatchDialog.setVisible(true);
          while(myMatchDialog.isVisible()){
            Thread.yield();
          }
          p1 = new Player(myMatchDialog.getPlayer1());
          p2 = new Player(myMatchDialog.getPlayer2());
          myMatchDialog.dispose();
        }
        
      }
      myAL.add(new Match(p1, p2, bestOf));
    }
    
    //generating the LREvent
    LREvent myEvent = new LREvent(myAL, date, time, title, tournament, format);
    
    //writing output of LREvent to LROutput
    LROutput myOut = new LROutput();
    myOut.setVisible(true);
    myOut.write(myEvent.genThread());
    myOut.write("\n[small]Generated by LiveReportCompanion v1.1[/small]");
  }
}
