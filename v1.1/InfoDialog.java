/**
 * This class creates a dialog box in which the user inputs the event title,
 * the name of the tournament that its a part of, and indicates whether
 * it will be dual tournament format or not. On submission the class becomes 
 * not visible, and information is extracted from the TextField elements before 
 * disposal.
 * <p>
 * Large portions of this code was generated by NetBeans
 * <p>
 * This class was created for MHacks - Fall 2013
 * 
 * @author   packrat386
 * @version  %I%, %G%
 * @see      javax.swing.JTextField
 */

public class InfoDialog extends javax.swing.JDialog {
  
  /**
   * Creates new form InfoDialog <code> parent specifies a parent
   * relationship for this dialog, and modal toggles whether or not
   * the window is able to be de-selected.
   * 
   * @param   parent  either the frame object that created the dialog
   *                  or null
   * @param   modal   toggles whether the window can be deselected
   */
  public InfoDialog(java.awt.Frame parent, boolean modal) {
    super(parent, modal);
    initComponents();
  }
  
  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    
    titlePrompt = new javax.swing.JLabel();
    titleTextField = new javax.swing.JTextField();
    tournamentPrompt = new javax.swing.JLabel();
    tournamentTextField = new javax.swing.JTextField();
    formatCheckBox = new javax.swing.JCheckBox();
    submit = new javax.swing.JButton();
    
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    
    titlePrompt.setText("Please enter the title of the event");
    
    titleTextField.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        titleTextFieldActionPerformed(evt);
      }
    });
    
    tournamentPrompt.setText("Please enter the Liquipedia compatible tournament name");
    
    tournamentTextField.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tournamentTextFieldActionPerformed(evt);
      }
    });
    
    formatCheckBox.setText("Dual Tournament");
    
    submit.setText("Submit");
    submit.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        submitActionPerformed(evt);
      }
    });
    
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
                              layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                            .addContainerGap()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                    .addComponent(formatCheckBox)
                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                    .addComponent(submit))
                                                        .addGroup(layout.createSequentialGroup()
                                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(titlePrompt)
                                                                                .addComponent(titleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(tournamentPrompt)
                                                                                .addComponent(tournamentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                    .addGap(0, 59, Short.MAX_VALUE)))
                                            .addContainerGap())
                             );
    layout.setVerticalGroup(
                            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                              .addGroup(layout.createSequentialGroup()
                                          .addContainerGap()
                                          .addComponent(titlePrompt)
                                          .addGap(18, 18, 18)
                                          .addComponent(titleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                          .addGap(18, 18, 18)
                                          .addComponent(tournamentPrompt)
                                          .addGap(18, 18, 18)
                                          .addComponent(tournamentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                          .addGap(18, 18, 18)
                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                      .addComponent(formatCheckBox)
                                                      .addComponent(submit))
                                          .addContainerGap(26, Short.MAX_VALUE))
                           );
    
    pack();
  }// </editor-fold>//GEN-END:initComponents
  
  /**
   * This function is called if a particular action is done to titleTextField, but
   * it is empty
   * 
   * @param   evt  the ActionEvent that triggers the function
   */
  private void titleTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleTextFieldActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_titleTextFieldActionPerformed
  
  /**
   * This function is called if a particular action is done to titleTextField, but
   * it is empty
   * 
   * @param   evt  the ActionEvent that triggers the function
   */
  private void tournamentTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tournamentTextFieldActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_tournamentTextFieldActionPerformed
  
  /**
   * This function is called if the Submit button is pressed and makes the
   * Dialog box no longer visible
   * 
   * @param   evt  the ActionEvent that triggers the function
   */
  private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
    setVisible(false);
  }//GEN-LAST:event_submitActionPerformed
  
  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(InfoDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(InfoDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(InfoDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(InfoDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>
    
    /* Create and display the dialog */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        InfoDialog dialog = new InfoDialog(new javax.swing.JFrame(), true);
        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
          @Override
          public void windowClosing(java.awt.event.WindowEvent e) {
            System.exit(0);
          }
        });
        dialog.setVisible(true);
      }
    });
  }
  
  /**
   * Returns the title provided by the user in TitleTextField
   * 
   * @return   the content of the TitleTextField
   * @see      #TitleTextField
   */
  public String getTitleTextField(){
    return titleTextField.getText();
  }
  
  /**
   * Returns the tournament name provided by the user in TournamentTextField
   * 
   * @return   the content of the TournamentTextField
   * @see      #TournamentTextField
   */
  public String getTournamentTextField(){
    return tournamentTextField.getText();
  }
  
  /**
   * Returns whether or no the "Dual Tournament" format has been selected
   * 
   * @return   whether formatCheckBox is selected
   * @see      #formatCheckBox
   */
  public boolean getFormat(){
    return formatCheckBox.isSelected();
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  
  /**
   * This JCheckBox indicates whether or not "Dual Tournament" is selected
   * 
   * @see   #getFormat()
   */
  private javax.swing.JCheckBox formatCheckBox;
  
  /**
   * This JButton is the trigger to close the window and extract the user
   * provided data.
   * 
   * @see   #submitActionPerformed(java.awt.event.ActionEvent)
   */
  private javax.swing.JButton submit;
  
  /**
   * This JLabel holds the prompt for the user to enter the title 
   */
  private javax.swing.JLabel titlePrompt;
  
  /**
   * This JTextField takes in the title provided by the user
   * 
   * @see   #getTitleTextField()
   */
  private javax.swing.JTextField titleTextField;
  
  /**
   * This JLabel holds the prompt for the user to enter the tournament 
   */
  private javax.swing.JLabel tournamentPrompt;
  
  /**
   * This JTextField takes in the tournament name provided by the user
   * 
   * @see   #getTournamentTextField()
   */
  private javax.swing.JTextField tournamentTextField;
  // End of variables declaration//GEN-END:variables
}
